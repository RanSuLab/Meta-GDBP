ccle drug-file: CCLE_NP24.2009_Drug_data_2015.02.24.csv
     gene-file:  CCLE_Expression_Entrez_2012-09-29.txt

#### 1 normalize drug sensitive(acta)
setwd("D:/R/R-3.4.2/workspace/ccle_code")
ccledrug <- read.csv("drug.csv",header=TRUE)
ccle_ic50 <- ccledrug$ IC50..uM.
ic50_normal <- (ccle_ic50-mean(ccle_ic50))/(sd(ccle_ic50))
mean(ic50_normal)
var(ic50_normal)
ccle_acta <- ccledrug$ ActArea
acta_normal <- (ccle_acta-mean(ccle_acta))/(sd(ccle_acta))
mean(acta_normal)
var(acta_normal)
ccleplot <- data.frame(CName=ccledrug$CCLE.Cell.Line.Name,PName=ccledrug$Primary.Cell.Line.Name,DRUG=ccledrug$Compound,IC50_Normal=ic50_normal,Pos=ic50_normal>0,Acta_Normal=acta_normal,Pos_acta=acta_normal>0)
orderacta <- ccleplot[order(-ccleplot$Acta_Normal),]
orderacta$ID=c(1:11670)
 yx.function <- function(x){
  if(x<(-0.8)){
   return("S")
  }else if(x>0.8){
   return("R")
  }else{
   return("0")
  }
 }
 for(i in 1:11670){
  orderacta$y[i]=yx.function(orderacta$Acta_Normal[i])
 }
ccle_drugdata <- orderacta[order(orderacta$DRUG,orderacta$CName),]
###output### save(ccle_drugdata,file="ccle_drugdata.RData")

#### 2 prepare gene exprSet
ccle_exprSet <- read.table("gene.txt",header=TRUE)
ccle_exprSet_matrix <- data.matrix(ccle_exprSet[,3:1039])
rownames <- ccle_exprSet$Name
row.names(ccle_exprSet_matrix) <- rownames
ccle_exprSet2 <- t(ccle_exprSet_matrix)
ccle_exprSet3 <- data.frame(ccle_exprSet2)
cname <- names(ccle_exprSet)
cname <- cname[3:1039]
for(i in 1:1037)
{
  if(substring(cname[i],1,1)=="X"){
    ccle_exprSet3$CName[i]=substring(cname[i],2)
  }else{
    ccle_exprSet3$CName[i]=cname[i]
  }  
}
gene_cid <- ccle_exprSet3$CName
###output### save(ccle_exprSet3,file="ccle_exprSet3.RData")


####3 generate cell line-cell line pearson files for each drug
load("ccle_exprSet.RData")
load("ccle_exprSet3.RData")
a <- gene_cid[gene_cid%in%ccle_drugdata$CName]
drugs <- levels(as.factor(ccle_drugdata$DRUG))
drugdata <- list()
alldata <- list()
for(i in 1:24){
  drug <- drugs[i]
  drugdata[[i]] <- ccle_drugdata[which(ccle_drugdata$DRUG==drug),]
  alldata[[i]] <- merge(drugdata[[i]],ccle_exprSet3,by="CName")
  eachd_cellline <- alldata[[i]]$CName
  s<-c()
  for(j in 1:length(eachd_cellline)){
    if(substring(eachd_cellline[j],1,1) %in% c("0","1","2","3","4","5","6","7","8","9")){
	  s[j] <- paste("X",eachd_cellline[j],sep="")
	}else{
	  print(eachd_cellline[j])
	  s[j] <- as.character(eachd_cellline[j])
	}
  }
  celldata <- ccle_exprSet[,s]
  result <- cor(celldata,method="pearson")
  filename <- paste(i,".csv",sep="")
  filename2 <- paste("pearson/",filename,sep="")
  write.csv(result,filename2)
}


####4 this file is generated by PaDel-Descriptor
setwd("D:/R/R-3.4.2/workspace/ccle_code/drug")



####5 wgcna
setwd("D:/R/R-3.4.2/workspace/ccle_code/wgcna")
library("WGCNA")
options(stringsAsFactors = FALSE)
enableWGCNAThreads()
load("ccle_drugdata.RData")
load("ccle_exprSet3.RData")
drugdata <- list()
alldata <- list()
drugs <- levels(as.factor(ccle_drugdata$DRUG))
for(i in 1:24){
  drugdata[[i]] <- ccle_drugdata[which(ccle_drugdata$DRUG==drugs[i]),]
  alldata[[i]] <- merge(drugdata[[i]],ccle_exprSet3,by="CName")
  drug_sensitivity <- alldata[[i]]$Acta_Normal
  dodata <- alldata[[i]][,-(1:9)]
  powers = c(c(1:10), seq(from = 12, to=20, by=2))
  datExpr <- dodata
  sft = pickSoftThreshold(datExpr, powerVector = powers, verbose = 5)
  bwnet = blockwiseModules(datExpr, maxBlockSize = 2000, power = sft$powerEstimate, TOMType = "unsigned", minModuleSize =30, reassignThreshold = 0, mergeCutHeight = 0.25, numericLabels = TRUE, saveTOMs = TRUE, saveTOMFileBase = "test", verbose = 3)
  models <- table(bwnet$colors)
  filename1 <- paste(i,"-models.csv",sep="")
  write.csv(models,filename1)  
  genes <- bwnet$colors 
  filename2 <- paste(i,"-genes.csv",sep="")
  write.csv(genes,filename2)  
  bwLabel <- labels2colors(bwnet$colors)
  hub <- chooseTopHubInEachModule(datExpr, bwLabel)
  filename3 <- paste(i,"-hub.csv",sep="")
  write.csv(hub,filename3)
  cors <- c()
  for(j in 1:length(hub)){
    hubgene <- dodata[,which(names(dodata)==hub[j])]
    cors[j] <- cor(hubgene,drug_sensitivity,method="pearson")
  }
  names(cors) <- names(hub) 
  filename4 <-  paste(i,"-cords.csv",sep="") 
  write.csv(cors,filename4)
  dodata1 <- dodata[,hub]
  matrix <- cor(dodata1,method="pearson")
  filename5 <-  paste(i,"-corgg.csv",sep="") 
  write.csv(matrix,filename5)
  cors <- c()
  p_value <- c()
  for(j in 1:length(hub)){
    hubgene <- dodata[,which(names(dodata)==hub[j])]
	cors[j] <- cor.test(hubgene,drug_sensitivity)$estimate
    p_value[j] <- cor.test(hubgene,drug_sensitivity)$p.value
  }  
  p_drug <- data.frame(hub,cors,p_value)
  filename6 <- paste(i,"-p.csv",sep="")
  write.csv(p_drug,filename6)
}  


